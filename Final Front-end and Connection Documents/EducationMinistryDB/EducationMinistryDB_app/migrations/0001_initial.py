# Generated by Django 4.1.3 on 2022-11-22 17:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('college_id', models.IntegerField(db_column='College_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=200)),
                ('type', models.CharField(db_column='Type', max_length=1)),
                ('date_of_establishment', models.DateField(blank=True, db_column='Date_Of_Establishment', null=True)),
                ('fees', models.IntegerField(db_column='Fees')),
                ('no_of_teachers', models.IntegerField(blank=True, db_column='No_Of_Teachers', null=True)),
                ('no_of_students', models.IntegerField(blank=True, db_column='No_Of_Students', null=True)),
            ],
            options={
                'db_table': 'College',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('school_id', models.IntegerField(db_column='School_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=200)),
                ('type', models.CharField(db_column='Type', max_length=1)),
                ('date_of_establishment', models.DateField(blank=True, db_column='Date_Of_Establishment', null=True)),
                ('fees', models.IntegerField(db_column='Fees')),
                ('no_of_teachers', models.IntegerField(blank=True, db_column='No_Of_Teachers', null=True)),
                ('no_of_students', models.IntegerField(blank=True, db_column='No_Of_Students', null=True)),
                ('mid_day_meal', models.BooleanField(blank=True, db_column='Mid_Day_Meal', null=True)),
            ],
            options={
                'db_table': 'School',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.IntegerField(db_column='Student_ID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='First_Name', max_length=200)),
                ('last_name', models.CharField(db_column='Last_Name', max_length=200)),
                ('sex', models.CharField(db_column='Sex', max_length=1)),
                ('type', models.CharField(db_column='Type', max_length=1)),
                ('standard', models.IntegerField(blank=True, db_column='Standard', null=True)),
                ('dob', models.DateField(db_column='DOB')),
            ],
            options={
                'db_table': 'Student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.IntegerField(db_column='Teacher_ID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='First_Name', max_length=200)),
                ('last_name', models.CharField(db_column='Last_Name', max_length=200)),
                ('salary', models.IntegerField(blank=True, db_column='Salary', null=True)),
                ('type', models.CharField(db_column='Type', max_length=1)),
                ('dob', models.DateField(db_column='DOB')),
                ('sex', models.CharField(blank=True, db_column='Sex', max_length=1, null=True)),
            ],
            options={
                'db_table': 'Teacher',
                'managed': False,
            },
        ),
    ]
